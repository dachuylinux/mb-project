/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.mb.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;

import com.mb.model.LaiSuat;
import com.mb.model.LaiSuatModel;
import com.mb.model.LaiSuatSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the LaiSuat service. Represents a row in the &quot;dm_laisuat&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface </code>LaiSuatModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link LaiSuatImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see LaiSuatImpl
 * @generated
 */
@JSON(strict = true)
@ProviderType
public class LaiSuatModelImpl
	extends BaseModelImpl<LaiSuat> implements LaiSuatModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a lai suat model instance should use the <code>LaiSuat</code> interface instead.
	 */
	public static final String TABLE_NAME = "dm_laisuat";

	public static final Object[][] TABLE_COLUMNS = {
		{"laiSuatId", Types.BIGINT}, {"companyId", Types.BIGINT},
		{"groupId", Types.BIGINT}, {"userId", Types.BIGINT},
		{"userName", Types.VARCHAR}, {"createDate", Types.TIMESTAMP},
		{"modifiedDate", Types.TIMESTAMP}, {"soTienVay", Types.DOUBLE},
		{"thoiHan", Types.INTEGER}, {"laiSuatVay", Types.DOUBLE},
		{"gocNgay", Types.DOUBLE}, {"laiNgay", Types.DOUBLE},
		{"gocNgayCuoi", Types.DOUBLE}, {"hoatDong", Types.BOOLEAN}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("laiSuatId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("soTienVay", Types.DOUBLE);
		TABLE_COLUMNS_MAP.put("thoiHan", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("laiSuatVay", Types.DOUBLE);
		TABLE_COLUMNS_MAP.put("gocNgay", Types.DOUBLE);
		TABLE_COLUMNS_MAP.put("laiNgay", Types.DOUBLE);
		TABLE_COLUMNS_MAP.put("gocNgayCuoi", Types.DOUBLE);
		TABLE_COLUMNS_MAP.put("hoatDong", Types.BOOLEAN);
	}

	public static final String TABLE_SQL_CREATE =
		"create table dm_laisuat (laiSuatId LONG not null primary key,companyId LONG,groupId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,soTienVay DOUBLE,thoiHan INTEGER,laiSuatVay DOUBLE,gocNgay DOUBLE,laiNgay DOUBLE,gocNgayCuoi DOUBLE,hoatDong BOOLEAN)";

	public static final String TABLE_SQL_DROP = "drop table dm_laisuat";

	public static final String ORDER_BY_JPQL =
		" ORDER BY laiSuat.laiSuatId ASC";

	public static final String ORDER_BY_SQL =
		" ORDER BY dm_laisuat.laiSuatId ASC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(
		com.mb.service.util.ServiceProps.get(
			"value.object.entity.cache.enabled.com.mb.model.LaiSuat"),
		true);

	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(
		com.mb.service.util.ServiceProps.get(
			"value.object.finder.cache.enabled.com.mb.model.LaiSuat"),
		true);

	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(
		com.mb.service.util.ServiceProps.get(
			"value.object.column.bitmask.enabled.com.mb.model.LaiSuat"),
		true);

	public static final long SOTIENVAY_COLUMN_BITMASK = 1L;

	public static final long THOIHAN_COLUMN_BITMASK = 2L;

	public static final long LAISUATID_COLUMN_BITMASK = 4L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static LaiSuat toModel(LaiSuatSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		LaiSuat model = new LaiSuatImpl();

		model.setLaiSuatId(soapModel.getLaiSuatId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setGroupId(soapModel.getGroupId());
		model.setUserId(soapModel.getUserId());
		model.setUserName(soapModel.getUserName());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setSoTienVay(soapModel.getSoTienVay());
		model.setThoiHan(soapModel.getThoiHan());
		model.setLaiSuatVay(soapModel.getLaiSuatVay());
		model.setGocNgay(soapModel.getGocNgay());
		model.setLaiNgay(soapModel.getLaiNgay());
		model.setGocNgayCuoi(soapModel.getGocNgayCuoi());
		model.setHoatDong(soapModel.getHoatDong());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<LaiSuat> toModels(LaiSuatSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<LaiSuat> models = new ArrayList<LaiSuat>(soapModels.length);

		for (LaiSuatSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(
		com.mb.service.util.ServiceProps.get(
			"lock.expiration.time.com.mb.model.LaiSuat"));

	public LaiSuatModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _laiSuatId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setLaiSuatId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _laiSuatId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return LaiSuat.class;
	}

	@Override
	public String getModelClassName() {
		return LaiSuat.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<LaiSuat, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		for (Map.Entry<String, Function<LaiSuat, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<LaiSuat, Object> attributeGetterFunction =
				entry.getValue();

			attributes.put(
				attributeName, attributeGetterFunction.apply((LaiSuat)this));
		}

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<LaiSuat, Object>> attributeSetterBiConsumers =
			getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<LaiSuat, Object> attributeSetterBiConsumer =
				attributeSetterBiConsumers.get(attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(LaiSuat)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<LaiSuat, Object>>
		getAttributeGetterFunctions() {

		return _attributeGetterFunctions;
	}

	public Map<String, BiConsumer<LaiSuat, Object>>
		getAttributeSetterBiConsumers() {

		return _attributeSetterBiConsumers;
	}

	private static final Map<String, Function<LaiSuat, Object>>
		_attributeGetterFunctions;
	private static final Map<String, BiConsumer<LaiSuat, Object>>
		_attributeSetterBiConsumers;

	static {
		Map<String, Function<LaiSuat, Object>> attributeGetterFunctions =
			new LinkedHashMap<String, Function<LaiSuat, Object>>();
		Map<String, BiConsumer<LaiSuat, ?>> attributeSetterBiConsumers =
			new LinkedHashMap<String, BiConsumer<LaiSuat, ?>>();

		attributeGetterFunctions.put(
			"laiSuatId",
			new Function<LaiSuat, Object>() {

				@Override
				public Object apply(LaiSuat laiSuat) {
					return laiSuat.getLaiSuatId();
				}

			});
		attributeSetterBiConsumers.put(
			"laiSuatId",
			new BiConsumer<LaiSuat, Object>() {

				@Override
				public void accept(LaiSuat laiSuat, Object laiSuatId) {
					laiSuat.setLaiSuatId((Long)laiSuatId);
				}

			});
		attributeGetterFunctions.put(
			"companyId",
			new Function<LaiSuat, Object>() {

				@Override
				public Object apply(LaiSuat laiSuat) {
					return laiSuat.getCompanyId();
				}

			});
		attributeSetterBiConsumers.put(
			"companyId",
			new BiConsumer<LaiSuat, Object>() {

				@Override
				public void accept(LaiSuat laiSuat, Object companyId) {
					laiSuat.setCompanyId((Long)companyId);
				}

			});
		attributeGetterFunctions.put(
			"groupId",
			new Function<LaiSuat, Object>() {

				@Override
				public Object apply(LaiSuat laiSuat) {
					return laiSuat.getGroupId();
				}

			});
		attributeSetterBiConsumers.put(
			"groupId",
			new BiConsumer<LaiSuat, Object>() {

				@Override
				public void accept(LaiSuat laiSuat, Object groupId) {
					laiSuat.setGroupId((Long)groupId);
				}

			});
		attributeGetterFunctions.put(
			"userId",
			new Function<LaiSuat, Object>() {

				@Override
				public Object apply(LaiSuat laiSuat) {
					return laiSuat.getUserId();
				}

			});
		attributeSetterBiConsumers.put(
			"userId",
			new BiConsumer<LaiSuat, Object>() {

				@Override
				public void accept(LaiSuat laiSuat, Object userId) {
					laiSuat.setUserId((Long)userId);
				}

			});
		attributeGetterFunctions.put(
			"userName",
			new Function<LaiSuat, Object>() {

				@Override
				public Object apply(LaiSuat laiSuat) {
					return laiSuat.getUserName();
				}

			});
		attributeSetterBiConsumers.put(
			"userName",
			new BiConsumer<LaiSuat, Object>() {

				@Override
				public void accept(LaiSuat laiSuat, Object userName) {
					laiSuat.setUserName((String)userName);
				}

			});
		attributeGetterFunctions.put(
			"createDate",
			new Function<LaiSuat, Object>() {

				@Override
				public Object apply(LaiSuat laiSuat) {
					return laiSuat.getCreateDate();
				}

			});
		attributeSetterBiConsumers.put(
			"createDate",
			new BiConsumer<LaiSuat, Object>() {

				@Override
				public void accept(LaiSuat laiSuat, Object createDate) {
					laiSuat.setCreateDate((Date)createDate);
				}

			});
		attributeGetterFunctions.put(
			"modifiedDate",
			new Function<LaiSuat, Object>() {

				@Override
				public Object apply(LaiSuat laiSuat) {
					return laiSuat.getModifiedDate();
				}

			});
		attributeSetterBiConsumers.put(
			"modifiedDate",
			new BiConsumer<LaiSuat, Object>() {

				@Override
				public void accept(LaiSuat laiSuat, Object modifiedDate) {
					laiSuat.setModifiedDate((Date)modifiedDate);
				}

			});
		attributeGetterFunctions.put(
			"soTienVay",
			new Function<LaiSuat, Object>() {

				@Override
				public Object apply(LaiSuat laiSuat) {
					return laiSuat.getSoTienVay();
				}

			});
		attributeSetterBiConsumers.put(
			"soTienVay",
			new BiConsumer<LaiSuat, Object>() {

				@Override
				public void accept(LaiSuat laiSuat, Object soTienVay) {
					laiSuat.setSoTienVay((Double)soTienVay);
				}

			});
		attributeGetterFunctions.put(
			"thoiHan",
			new Function<LaiSuat, Object>() {

				@Override
				public Object apply(LaiSuat laiSuat) {
					return laiSuat.getThoiHan();
				}

			});
		attributeSetterBiConsumers.put(
			"thoiHan",
			new BiConsumer<LaiSuat, Object>() {

				@Override
				public void accept(LaiSuat laiSuat, Object thoiHan) {
					laiSuat.setThoiHan((Integer)thoiHan);
				}

			});
		attributeGetterFunctions.put(
			"laiSuatVay",
			new Function<LaiSuat, Object>() {

				@Override
				public Object apply(LaiSuat laiSuat) {
					return laiSuat.getLaiSuatVay();
				}

			});
		attributeSetterBiConsumers.put(
			"laiSuatVay",
			new BiConsumer<LaiSuat, Object>() {

				@Override
				public void accept(LaiSuat laiSuat, Object laiSuatVay) {
					laiSuat.setLaiSuatVay((Double)laiSuatVay);
				}

			});
		attributeGetterFunctions.put(
			"gocNgay",
			new Function<LaiSuat, Object>() {

				@Override
				public Object apply(LaiSuat laiSuat) {
					return laiSuat.getGocNgay();
				}

			});
		attributeSetterBiConsumers.put(
			"gocNgay",
			new BiConsumer<LaiSuat, Object>() {

				@Override
				public void accept(LaiSuat laiSuat, Object gocNgay) {
					laiSuat.setGocNgay((Double)gocNgay);
				}

			});
		attributeGetterFunctions.put(
			"laiNgay",
			new Function<LaiSuat, Object>() {

				@Override
				public Object apply(LaiSuat laiSuat) {
					return laiSuat.getLaiNgay();
				}

			});
		attributeSetterBiConsumers.put(
			"laiNgay",
			new BiConsumer<LaiSuat, Object>() {

				@Override
				public void accept(LaiSuat laiSuat, Object laiNgay) {
					laiSuat.setLaiNgay((Double)laiNgay);
				}

			});
		attributeGetterFunctions.put(
			"gocNgayCuoi",
			new Function<LaiSuat, Object>() {

				@Override
				public Object apply(LaiSuat laiSuat) {
					return laiSuat.getGocNgayCuoi();
				}

			});
		attributeSetterBiConsumers.put(
			"gocNgayCuoi",
			new BiConsumer<LaiSuat, Object>() {

				@Override
				public void accept(LaiSuat laiSuat, Object gocNgayCuoi) {
					laiSuat.setGocNgayCuoi((Double)gocNgayCuoi);
				}

			});
		attributeGetterFunctions.put(
			"hoatDong",
			new Function<LaiSuat, Object>() {

				@Override
				public Object apply(LaiSuat laiSuat) {
					return laiSuat.getHoatDong();
				}

			});
		attributeSetterBiConsumers.put(
			"hoatDong",
			new BiConsumer<LaiSuat, Object>() {

				@Override
				public void accept(LaiSuat laiSuat, Object hoatDong) {
					laiSuat.setHoatDong((Boolean)hoatDong);
				}

			});

		_attributeGetterFunctions = Collections.unmodifiableMap(
			attributeGetterFunctions);
		_attributeSetterBiConsumers = Collections.unmodifiableMap(
			(Map)attributeSetterBiConsumers);
	}

	@JSON
	@Override
	public long getLaiSuatId() {
		return _laiSuatId;
	}

	@Override
	public void setLaiSuatId(long laiSuatId) {
		_columnBitmask = -1L;

		_laiSuatId = laiSuatId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_groupId = groupId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException pe) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return "";
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public Double getSoTienVay() {
		return _soTienVay;
	}

	@Override
	public void setSoTienVay(Double soTienVay) {
		_columnBitmask |= SOTIENVAY_COLUMN_BITMASK;

		if (!_setOriginalSoTienVay) {
			_setOriginalSoTienVay = true;

			_originalSoTienVay = _soTienVay;
		}

		_soTienVay = soTienVay;
	}

	public Double getOriginalSoTienVay() {
		return _originalSoTienVay;
	}

	@JSON
	@Override
	public int getThoiHan() {
		return _thoiHan;
	}

	@Override
	public void setThoiHan(int thoiHan) {
		_columnBitmask |= THOIHAN_COLUMN_BITMASK;

		if (!_setOriginalThoiHan) {
			_setOriginalThoiHan = true;

			_originalThoiHan = _thoiHan;
		}

		_thoiHan = thoiHan;
	}

	public int getOriginalThoiHan() {
		return _originalThoiHan;
	}

	@JSON
	@Override
	public Double getLaiSuatVay() {
		return _laiSuatVay;
	}

	@Override
	public void setLaiSuatVay(Double laiSuatVay) {
		_laiSuatVay = laiSuatVay;
	}

	@JSON
	@Override
	public Double getGocNgay() {
		return _gocNgay;
	}

	@Override
	public void setGocNgay(Double gocNgay) {
		_gocNgay = gocNgay;
	}

	@JSON
	@Override
	public Double getLaiNgay() {
		return _laiNgay;
	}

	@Override
	public void setLaiNgay(Double laiNgay) {
		_laiNgay = laiNgay;
	}

	@JSON
	@Override
	public Double getGocNgayCuoi() {
		return _gocNgayCuoi;
	}

	@Override
	public void setGocNgayCuoi(Double gocNgayCuoi) {
		_gocNgayCuoi = gocNgayCuoi;
	}

	@JSON
	@Override
	public Boolean getHoatDong() {
		return _hoatDong;
	}

	@Override
	public void setHoatDong(Boolean hoatDong) {
		_hoatDong = hoatDong;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			getCompanyId(), LaiSuat.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public LaiSuat toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (LaiSuat)ProxyUtil.newProxyInstance(
				_classLoader, _escapedModelInterfaces,
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		LaiSuatImpl laiSuatImpl = new LaiSuatImpl();

		laiSuatImpl.setLaiSuatId(getLaiSuatId());
		laiSuatImpl.setCompanyId(getCompanyId());
		laiSuatImpl.setGroupId(getGroupId());
		laiSuatImpl.setUserId(getUserId());
		laiSuatImpl.setUserName(getUserName());
		laiSuatImpl.setCreateDate(getCreateDate());
		laiSuatImpl.setModifiedDate(getModifiedDate());
		laiSuatImpl.setSoTienVay(getSoTienVay());
		laiSuatImpl.setThoiHan(getThoiHan());
		laiSuatImpl.setLaiSuatVay(getLaiSuatVay());
		laiSuatImpl.setGocNgay(getGocNgay());
		laiSuatImpl.setLaiNgay(getLaiNgay());
		laiSuatImpl.setGocNgayCuoi(getGocNgayCuoi());
		laiSuatImpl.setHoatDong(getHoatDong());

		laiSuatImpl.resetOriginalValues();

		return laiSuatImpl;
	}

	@Override
	public int compareTo(LaiSuat laiSuat) {
		int value = 0;

		if (getLaiSuatId() < laiSuat.getLaiSuatId()) {
			value = -1;
		}
		else if (getLaiSuatId() > laiSuat.getLaiSuatId()) {
			value = 1;
		}
		else {
			value = 0;
		}

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof LaiSuat)) {
			return false;
		}

		LaiSuat laiSuat = (LaiSuat)obj;

		long primaryKey = laiSuat.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		LaiSuatModelImpl laiSuatModelImpl = this;

		laiSuatModelImpl._setModifiedDate = false;

		laiSuatModelImpl._originalSoTienVay = laiSuatModelImpl._soTienVay;

		laiSuatModelImpl._setOriginalSoTienVay = false;

		laiSuatModelImpl._originalThoiHan = laiSuatModelImpl._thoiHan;

		laiSuatModelImpl._setOriginalThoiHan = false;

		laiSuatModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<LaiSuat> toCacheModel() {
		LaiSuatCacheModel laiSuatCacheModel = new LaiSuatCacheModel();

		laiSuatCacheModel.laiSuatId = getLaiSuatId();

		laiSuatCacheModel.companyId = getCompanyId();

		laiSuatCacheModel.groupId = getGroupId();

		laiSuatCacheModel.userId = getUserId();

		laiSuatCacheModel.userName = getUserName();

		String userName = laiSuatCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			laiSuatCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			laiSuatCacheModel.createDate = createDate.getTime();
		}
		else {
			laiSuatCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			laiSuatCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			laiSuatCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		laiSuatCacheModel.soTienVay = getSoTienVay();

		laiSuatCacheModel.thoiHan = getThoiHan();

		laiSuatCacheModel.laiSuatVay = getLaiSuatVay();

		laiSuatCacheModel.gocNgay = getGocNgay();

		laiSuatCacheModel.laiNgay = getLaiNgay();

		laiSuatCacheModel.gocNgayCuoi = getGocNgayCuoi();

		laiSuatCacheModel.hoatDong = getHoatDong();

		return laiSuatCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<LaiSuat, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			4 * attributeGetterFunctions.size() + 2);

		sb.append("{");

		for (Map.Entry<String, Function<LaiSuat, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<LaiSuat, Object> attributeGetterFunction =
				entry.getValue();

			sb.append(attributeName);
			sb.append("=");
			sb.append(attributeGetterFunction.apply((LaiSuat)this));
			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		Map<String, Function<LaiSuat, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			5 * attributeGetterFunctions.size() + 4);

		sb.append("<model><model-name>");
		sb.append(getModelClassName());
		sb.append("</model-name>");

		for (Map.Entry<String, Function<LaiSuat, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<LaiSuat, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("<column><column-name>");
			sb.append(attributeName);
			sb.append("</column-name><column-value><![CDATA[");
			sb.append(attributeGetterFunction.apply((LaiSuat)this));
			sb.append("]]></column-value></column>");
		}

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader =
		LaiSuat.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
		LaiSuat.class, ModelWrapper.class
	};

	private long _laiSuatId;
	private long _companyId;
	private long _groupId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private Double _soTienVay;
	private Double _originalSoTienVay;
	private boolean _setOriginalSoTienVay;
	private int _thoiHan;
	private int _originalThoiHan;
	private boolean _setOriginalThoiHan;
	private Double _laiSuatVay;
	private Double _gocNgay;
	private Double _laiNgay;
	private Double _gocNgayCuoi;
	private Boolean _hoatDong;
	private long _columnBitmask;
	private LaiSuat _escapedModel;

}