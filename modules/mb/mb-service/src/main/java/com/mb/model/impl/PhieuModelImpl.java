/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.mb.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;

import com.mb.model.Phieu;
import com.mb.model.PhieuModel;
import com.mb.model.PhieuSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the Phieu service. Represents a row in the &quot;ketoan_phieu&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface </code>PhieuModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link PhieuImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see PhieuImpl
 * @generated
 */
@JSON(strict = true)
@ProviderType
public class PhieuModelImpl extends BaseModelImpl<Phieu> implements PhieuModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a phieu model instance should use the <code>Phieu</code> interface instead.
	 */
	public static final String TABLE_NAME = "ketoan_phieu";

	public static final Object[][] TABLE_COLUMNS = {
		{"phieuId", Types.BIGINT}, {"companyId", Types.BIGINT},
		{"groupId", Types.BIGINT}, {"userId", Types.BIGINT},
		{"userName", Types.VARCHAR}, {"createDate", Types.TIMESTAMP},
		{"modifiedDate", Types.TIMESTAMP}, {"maCTV", Types.VARCHAR},
		{"hoTenCTV", Types.VARCHAR}, {"soHopDong", Types.VARCHAR},
		{"ngayChungTu", Types.TIMESTAMP}, {"diaChi", Types.VARCHAR},
		{"soPhieu", Types.VARCHAR}, {"ngayGhiSo", Types.TIMESTAMP},
		{"maMSThuChi", Types.VARCHAR}, {"soTien", Types.DOUBLE},
		{"chungTuKemTheo", Types.VARCHAR}, {"loai", Types.INTEGER},
		{"hoatDong", Types.BOOLEAN}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("phieuId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("maCTV", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("hoTenCTV", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("soHopDong", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ngayChungTu", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("diaChi", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("soPhieu", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ngayGhiSo", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("maMSThuChi", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("soTien", Types.DOUBLE);
		TABLE_COLUMNS_MAP.put("chungTuKemTheo", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("loai", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("hoatDong", Types.BOOLEAN);
	}

	public static final String TABLE_SQL_CREATE =
		"create table ketoan_phieu (phieuId LONG not null primary key,companyId LONG,groupId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,maCTV VARCHAR(75) null,hoTenCTV VARCHAR(75) null,soHopDong VARCHAR(75) null,ngayChungTu DATE null,diaChi VARCHAR(75) null,soPhieu VARCHAR(75) null,ngayGhiSo DATE null,maMSThuChi VARCHAR(75) null,soTien DOUBLE,chungTuKemTheo VARCHAR(75) null,loai INTEGER,hoatDong BOOLEAN)";

	public static final String TABLE_SQL_DROP = "drop table ketoan_phieu";

	public static final String ORDER_BY_JPQL = " ORDER BY phieu.phieuId ASC";

	public static final String ORDER_BY_SQL =
		" ORDER BY ketoan_phieu.phieuId ASC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(
		com.mb.service.util.ServiceProps.get(
			"value.object.entity.cache.enabled.com.mb.model.Phieu"),
		true);

	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(
		com.mb.service.util.ServiceProps.get(
			"value.object.finder.cache.enabled.com.mb.model.Phieu"),
		true);

	public static final boolean COLUMN_BITMASK_ENABLED = false;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static Phieu toModel(PhieuSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		Phieu model = new PhieuImpl();

		model.setPhieuId(soapModel.getPhieuId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setGroupId(soapModel.getGroupId());
		model.setUserId(soapModel.getUserId());
		model.setUserName(soapModel.getUserName());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setMaCTV(soapModel.getMaCTV());
		model.setHoTenCTV(soapModel.getHoTenCTV());
		model.setSoHopDong(soapModel.getSoHopDong());
		model.setNgayChungTu(soapModel.getNgayChungTu());
		model.setDiaChi(soapModel.getDiaChi());
		model.setSoPhieu(soapModel.getSoPhieu());
		model.setNgayGhiSo(soapModel.getNgayGhiSo());
		model.setMaMSThuChi(soapModel.getMaMSThuChi());
		model.setSoTien(soapModel.getSoTien());
		model.setChungTuKemTheo(soapModel.getChungTuKemTheo());
		model.setLoai(soapModel.getLoai());
		model.setHoatDong(soapModel.getHoatDong());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<Phieu> toModels(PhieuSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<Phieu> models = new ArrayList<Phieu>(soapModels.length);

		for (PhieuSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(
		com.mb.service.util.ServiceProps.get(
			"lock.expiration.time.com.mb.model.Phieu"));

	public PhieuModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _phieuId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setPhieuId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _phieuId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return Phieu.class;
	}

	@Override
	public String getModelClassName() {
		return Phieu.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<Phieu, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		for (Map.Entry<String, Function<Phieu, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<Phieu, Object> attributeGetterFunction = entry.getValue();

			attributes.put(
				attributeName, attributeGetterFunction.apply((Phieu)this));
		}

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<Phieu, Object>> attributeSetterBiConsumers =
			getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<Phieu, Object> attributeSetterBiConsumer =
				attributeSetterBiConsumers.get(attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept((Phieu)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<Phieu, Object>> getAttributeGetterFunctions() {
		return _attributeGetterFunctions;
	}

	public Map<String, BiConsumer<Phieu, Object>>
		getAttributeSetterBiConsumers() {

		return _attributeSetterBiConsumers;
	}

	private static final Map<String, Function<Phieu, Object>>
		_attributeGetterFunctions;
	private static final Map<String, BiConsumer<Phieu, Object>>
		_attributeSetterBiConsumers;

	static {
		Map<String, Function<Phieu, Object>> attributeGetterFunctions =
			new LinkedHashMap<String, Function<Phieu, Object>>();
		Map<String, BiConsumer<Phieu, ?>> attributeSetterBiConsumers =
			new LinkedHashMap<String, BiConsumer<Phieu, ?>>();

		attributeGetterFunctions.put(
			"phieuId",
			new Function<Phieu, Object>() {

				@Override
				public Object apply(Phieu phieu) {
					return phieu.getPhieuId();
				}

			});
		attributeSetterBiConsumers.put(
			"phieuId",
			new BiConsumer<Phieu, Object>() {

				@Override
				public void accept(Phieu phieu, Object phieuId) {
					phieu.setPhieuId((Long)phieuId);
				}

			});
		attributeGetterFunctions.put(
			"companyId",
			new Function<Phieu, Object>() {

				@Override
				public Object apply(Phieu phieu) {
					return phieu.getCompanyId();
				}

			});
		attributeSetterBiConsumers.put(
			"companyId",
			new BiConsumer<Phieu, Object>() {

				@Override
				public void accept(Phieu phieu, Object companyId) {
					phieu.setCompanyId((Long)companyId);
				}

			});
		attributeGetterFunctions.put(
			"groupId",
			new Function<Phieu, Object>() {

				@Override
				public Object apply(Phieu phieu) {
					return phieu.getGroupId();
				}

			});
		attributeSetterBiConsumers.put(
			"groupId",
			new BiConsumer<Phieu, Object>() {

				@Override
				public void accept(Phieu phieu, Object groupId) {
					phieu.setGroupId((Long)groupId);
				}

			});
		attributeGetterFunctions.put(
			"userId",
			new Function<Phieu, Object>() {

				@Override
				public Object apply(Phieu phieu) {
					return phieu.getUserId();
				}

			});
		attributeSetterBiConsumers.put(
			"userId",
			new BiConsumer<Phieu, Object>() {

				@Override
				public void accept(Phieu phieu, Object userId) {
					phieu.setUserId((Long)userId);
				}

			});
		attributeGetterFunctions.put(
			"userName",
			new Function<Phieu, Object>() {

				@Override
				public Object apply(Phieu phieu) {
					return phieu.getUserName();
				}

			});
		attributeSetterBiConsumers.put(
			"userName",
			new BiConsumer<Phieu, Object>() {

				@Override
				public void accept(Phieu phieu, Object userName) {
					phieu.setUserName((String)userName);
				}

			});
		attributeGetterFunctions.put(
			"createDate",
			new Function<Phieu, Object>() {

				@Override
				public Object apply(Phieu phieu) {
					return phieu.getCreateDate();
				}

			});
		attributeSetterBiConsumers.put(
			"createDate",
			new BiConsumer<Phieu, Object>() {

				@Override
				public void accept(Phieu phieu, Object createDate) {
					phieu.setCreateDate((Date)createDate);
				}

			});
		attributeGetterFunctions.put(
			"modifiedDate",
			new Function<Phieu, Object>() {

				@Override
				public Object apply(Phieu phieu) {
					return phieu.getModifiedDate();
				}

			});
		attributeSetterBiConsumers.put(
			"modifiedDate",
			new BiConsumer<Phieu, Object>() {

				@Override
				public void accept(Phieu phieu, Object modifiedDate) {
					phieu.setModifiedDate((Date)modifiedDate);
				}

			});
		attributeGetterFunctions.put(
			"maCTV",
			new Function<Phieu, Object>() {

				@Override
				public Object apply(Phieu phieu) {
					return phieu.getMaCTV();
				}

			});
		attributeSetterBiConsumers.put(
			"maCTV",
			new BiConsumer<Phieu, Object>() {

				@Override
				public void accept(Phieu phieu, Object maCTV) {
					phieu.setMaCTV((String)maCTV);
				}

			});
		attributeGetterFunctions.put(
			"hoTenCTV",
			new Function<Phieu, Object>() {

				@Override
				public Object apply(Phieu phieu) {
					return phieu.getHoTenCTV();
				}

			});
		attributeSetterBiConsumers.put(
			"hoTenCTV",
			new BiConsumer<Phieu, Object>() {

				@Override
				public void accept(Phieu phieu, Object hoTenCTV) {
					phieu.setHoTenCTV((String)hoTenCTV);
				}

			});
		attributeGetterFunctions.put(
			"soHopDong",
			new Function<Phieu, Object>() {

				@Override
				public Object apply(Phieu phieu) {
					return phieu.getSoHopDong();
				}

			});
		attributeSetterBiConsumers.put(
			"soHopDong",
			new BiConsumer<Phieu, Object>() {

				@Override
				public void accept(Phieu phieu, Object soHopDong) {
					phieu.setSoHopDong((String)soHopDong);
				}

			});
		attributeGetterFunctions.put(
			"ngayChungTu",
			new Function<Phieu, Object>() {

				@Override
				public Object apply(Phieu phieu) {
					return phieu.getNgayChungTu();
				}

			});
		attributeSetterBiConsumers.put(
			"ngayChungTu",
			new BiConsumer<Phieu, Object>() {

				@Override
				public void accept(Phieu phieu, Object ngayChungTu) {
					phieu.setNgayChungTu((Date)ngayChungTu);
				}

			});
		attributeGetterFunctions.put(
			"diaChi",
			new Function<Phieu, Object>() {

				@Override
				public Object apply(Phieu phieu) {
					return phieu.getDiaChi();
				}

			});
		attributeSetterBiConsumers.put(
			"diaChi",
			new BiConsumer<Phieu, Object>() {

				@Override
				public void accept(Phieu phieu, Object diaChi) {
					phieu.setDiaChi((String)diaChi);
				}

			});
		attributeGetterFunctions.put(
			"soPhieu",
			new Function<Phieu, Object>() {

				@Override
				public Object apply(Phieu phieu) {
					return phieu.getSoPhieu();
				}

			});
		attributeSetterBiConsumers.put(
			"soPhieu",
			new BiConsumer<Phieu, Object>() {

				@Override
				public void accept(Phieu phieu, Object soPhieu) {
					phieu.setSoPhieu((String)soPhieu);
				}

			});
		attributeGetterFunctions.put(
			"ngayGhiSo",
			new Function<Phieu, Object>() {

				@Override
				public Object apply(Phieu phieu) {
					return phieu.getNgayGhiSo();
				}

			});
		attributeSetterBiConsumers.put(
			"ngayGhiSo",
			new BiConsumer<Phieu, Object>() {

				@Override
				public void accept(Phieu phieu, Object ngayGhiSo) {
					phieu.setNgayGhiSo((Date)ngayGhiSo);
				}

			});
		attributeGetterFunctions.put(
			"maMSThuChi",
			new Function<Phieu, Object>() {

				@Override
				public Object apply(Phieu phieu) {
					return phieu.getMaMSThuChi();
				}

			});
		attributeSetterBiConsumers.put(
			"maMSThuChi",
			new BiConsumer<Phieu, Object>() {

				@Override
				public void accept(Phieu phieu, Object maMSThuChi) {
					phieu.setMaMSThuChi((String)maMSThuChi);
				}

			});
		attributeGetterFunctions.put(
			"soTien",
			new Function<Phieu, Object>() {

				@Override
				public Object apply(Phieu phieu) {
					return phieu.getSoTien();
				}

			});
		attributeSetterBiConsumers.put(
			"soTien",
			new BiConsumer<Phieu, Object>() {

				@Override
				public void accept(Phieu phieu, Object soTien) {
					phieu.setSoTien((Double)soTien);
				}

			});
		attributeGetterFunctions.put(
			"chungTuKemTheo",
			new Function<Phieu, Object>() {

				@Override
				public Object apply(Phieu phieu) {
					return phieu.getChungTuKemTheo();
				}

			});
		attributeSetterBiConsumers.put(
			"chungTuKemTheo",
			new BiConsumer<Phieu, Object>() {

				@Override
				public void accept(Phieu phieu, Object chungTuKemTheo) {
					phieu.setChungTuKemTheo((String)chungTuKemTheo);
				}

			});
		attributeGetterFunctions.put(
			"loai",
			new Function<Phieu, Object>() {

				@Override
				public Object apply(Phieu phieu) {
					return phieu.getLoai();
				}

			});
		attributeSetterBiConsumers.put(
			"loai",
			new BiConsumer<Phieu, Object>() {

				@Override
				public void accept(Phieu phieu, Object loai) {
					phieu.setLoai((Integer)loai);
				}

			});
		attributeGetterFunctions.put(
			"hoatDong",
			new Function<Phieu, Object>() {

				@Override
				public Object apply(Phieu phieu) {
					return phieu.getHoatDong();
				}

			});
		attributeSetterBiConsumers.put(
			"hoatDong",
			new BiConsumer<Phieu, Object>() {

				@Override
				public void accept(Phieu phieu, Object hoatDong) {
					phieu.setHoatDong((Boolean)hoatDong);
				}

			});

		_attributeGetterFunctions = Collections.unmodifiableMap(
			attributeGetterFunctions);
		_attributeSetterBiConsumers = Collections.unmodifiableMap(
			(Map)attributeSetterBiConsumers);
	}

	@JSON
	@Override
	public long getPhieuId() {
		return _phieuId;
	}

	@Override
	public void setPhieuId(long phieuId) {
		_phieuId = phieuId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_groupId = groupId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException pe) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return "";
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public String getMaCTV() {
		if (_maCTV == null) {
			return "";
		}
		else {
			return _maCTV;
		}
	}

	@Override
	public void setMaCTV(String maCTV) {
		_maCTV = maCTV;
	}

	@JSON
	@Override
	public String getHoTenCTV() {
		if (_hoTenCTV == null) {
			return "";
		}
		else {
			return _hoTenCTV;
		}
	}

	@Override
	public void setHoTenCTV(String hoTenCTV) {
		_hoTenCTV = hoTenCTV;
	}

	@JSON
	@Override
	public String getSoHopDong() {
		if (_soHopDong == null) {
			return "";
		}
		else {
			return _soHopDong;
		}
	}

	@Override
	public void setSoHopDong(String soHopDong) {
		_soHopDong = soHopDong;
	}

	@JSON
	@Override
	public Date getNgayChungTu() {
		return _ngayChungTu;
	}

	@Override
	public void setNgayChungTu(Date ngayChungTu) {
		_ngayChungTu = ngayChungTu;
	}

	@JSON
	@Override
	public String getDiaChi() {
		if (_diaChi == null) {
			return "";
		}
		else {
			return _diaChi;
		}
	}

	@Override
	public void setDiaChi(String diaChi) {
		_diaChi = diaChi;
	}

	@JSON
	@Override
	public String getSoPhieu() {
		if (_soPhieu == null) {
			return "";
		}
		else {
			return _soPhieu;
		}
	}

	@Override
	public void setSoPhieu(String soPhieu) {
		_soPhieu = soPhieu;
	}

	@JSON
	@Override
	public Date getNgayGhiSo() {
		return _ngayGhiSo;
	}

	@Override
	public void setNgayGhiSo(Date ngayGhiSo) {
		_ngayGhiSo = ngayGhiSo;
	}

	@JSON
	@Override
	public String getMaMSThuChi() {
		if (_maMSThuChi == null) {
			return "";
		}
		else {
			return _maMSThuChi;
		}
	}

	@Override
	public void setMaMSThuChi(String maMSThuChi) {
		_maMSThuChi = maMSThuChi;
	}

	@JSON
	@Override
	public Double getSoTien() {
		return _soTien;
	}

	@Override
	public void setSoTien(Double soTien) {
		_soTien = soTien;
	}

	@JSON
	@Override
	public String getChungTuKemTheo() {
		if (_chungTuKemTheo == null) {
			return "";
		}
		else {
			return _chungTuKemTheo;
		}
	}

	@Override
	public void setChungTuKemTheo(String chungTuKemTheo) {
		_chungTuKemTheo = chungTuKemTheo;
	}

	@JSON
	@Override
	public int getLoai() {
		return _loai;
	}

	@Override
	public void setLoai(int loai) {
		_loai = loai;
	}

	@JSON
	@Override
	public Boolean getHoatDong() {
		return _hoatDong;
	}

	@Override
	public void setHoatDong(Boolean hoatDong) {
		_hoatDong = hoatDong;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			getCompanyId(), Phieu.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public Phieu toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (Phieu)ProxyUtil.newProxyInstance(
				_classLoader, _escapedModelInterfaces,
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		PhieuImpl phieuImpl = new PhieuImpl();

		phieuImpl.setPhieuId(getPhieuId());
		phieuImpl.setCompanyId(getCompanyId());
		phieuImpl.setGroupId(getGroupId());
		phieuImpl.setUserId(getUserId());
		phieuImpl.setUserName(getUserName());
		phieuImpl.setCreateDate(getCreateDate());
		phieuImpl.setModifiedDate(getModifiedDate());
		phieuImpl.setMaCTV(getMaCTV());
		phieuImpl.setHoTenCTV(getHoTenCTV());
		phieuImpl.setSoHopDong(getSoHopDong());
		phieuImpl.setNgayChungTu(getNgayChungTu());
		phieuImpl.setDiaChi(getDiaChi());
		phieuImpl.setSoPhieu(getSoPhieu());
		phieuImpl.setNgayGhiSo(getNgayGhiSo());
		phieuImpl.setMaMSThuChi(getMaMSThuChi());
		phieuImpl.setSoTien(getSoTien());
		phieuImpl.setChungTuKemTheo(getChungTuKemTheo());
		phieuImpl.setLoai(getLoai());
		phieuImpl.setHoatDong(getHoatDong());

		phieuImpl.resetOriginalValues();

		return phieuImpl;
	}

	@Override
	public int compareTo(Phieu phieu) {
		int value = 0;

		if (getPhieuId() < phieu.getPhieuId()) {
			value = -1;
		}
		else if (getPhieuId() > phieu.getPhieuId()) {
			value = 1;
		}
		else {
			value = 0;
		}

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof Phieu)) {
			return false;
		}

		Phieu phieu = (Phieu)obj;

		long primaryKey = phieu.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		PhieuModelImpl phieuModelImpl = this;

		phieuModelImpl._setModifiedDate = false;
	}

	@Override
	public CacheModel<Phieu> toCacheModel() {
		PhieuCacheModel phieuCacheModel = new PhieuCacheModel();

		phieuCacheModel.phieuId = getPhieuId();

		phieuCacheModel.companyId = getCompanyId();

		phieuCacheModel.groupId = getGroupId();

		phieuCacheModel.userId = getUserId();

		phieuCacheModel.userName = getUserName();

		String userName = phieuCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			phieuCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			phieuCacheModel.createDate = createDate.getTime();
		}
		else {
			phieuCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			phieuCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			phieuCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		phieuCacheModel.maCTV = getMaCTV();

		String maCTV = phieuCacheModel.maCTV;

		if ((maCTV != null) && (maCTV.length() == 0)) {
			phieuCacheModel.maCTV = null;
		}

		phieuCacheModel.hoTenCTV = getHoTenCTV();

		String hoTenCTV = phieuCacheModel.hoTenCTV;

		if ((hoTenCTV != null) && (hoTenCTV.length() == 0)) {
			phieuCacheModel.hoTenCTV = null;
		}

		phieuCacheModel.soHopDong = getSoHopDong();

		String soHopDong = phieuCacheModel.soHopDong;

		if ((soHopDong != null) && (soHopDong.length() == 0)) {
			phieuCacheModel.soHopDong = null;
		}

		Date ngayChungTu = getNgayChungTu();

		if (ngayChungTu != null) {
			phieuCacheModel.ngayChungTu = ngayChungTu.getTime();
		}
		else {
			phieuCacheModel.ngayChungTu = Long.MIN_VALUE;
		}

		phieuCacheModel.diaChi = getDiaChi();

		String diaChi = phieuCacheModel.diaChi;

		if ((diaChi != null) && (diaChi.length() == 0)) {
			phieuCacheModel.diaChi = null;
		}

		phieuCacheModel.soPhieu = getSoPhieu();

		String soPhieu = phieuCacheModel.soPhieu;

		if ((soPhieu != null) && (soPhieu.length() == 0)) {
			phieuCacheModel.soPhieu = null;
		}

		Date ngayGhiSo = getNgayGhiSo();

		if (ngayGhiSo != null) {
			phieuCacheModel.ngayGhiSo = ngayGhiSo.getTime();
		}
		else {
			phieuCacheModel.ngayGhiSo = Long.MIN_VALUE;
		}

		phieuCacheModel.maMSThuChi = getMaMSThuChi();

		String maMSThuChi = phieuCacheModel.maMSThuChi;

		if ((maMSThuChi != null) && (maMSThuChi.length() == 0)) {
			phieuCacheModel.maMSThuChi = null;
		}

		phieuCacheModel.soTien = getSoTien();

		phieuCacheModel.chungTuKemTheo = getChungTuKemTheo();

		String chungTuKemTheo = phieuCacheModel.chungTuKemTheo;

		if ((chungTuKemTheo != null) && (chungTuKemTheo.length() == 0)) {
			phieuCacheModel.chungTuKemTheo = null;
		}

		phieuCacheModel.loai = getLoai();

		phieuCacheModel.hoatDong = getHoatDong();

		return phieuCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<Phieu, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			4 * attributeGetterFunctions.size() + 2);

		sb.append("{");

		for (Map.Entry<String, Function<Phieu, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<Phieu, Object> attributeGetterFunction = entry.getValue();

			sb.append(attributeName);
			sb.append("=");
			sb.append(attributeGetterFunction.apply((Phieu)this));
			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		Map<String, Function<Phieu, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			5 * attributeGetterFunctions.size() + 4);

		sb.append("<model><model-name>");
		sb.append(getModelClassName());
		sb.append("</model-name>");

		for (Map.Entry<String, Function<Phieu, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<Phieu, Object> attributeGetterFunction = entry.getValue();

			sb.append("<column><column-name>");
			sb.append(attributeName);
			sb.append("</column-name><column-value><![CDATA[");
			sb.append(attributeGetterFunction.apply((Phieu)this));
			sb.append("]]></column-value></column>");
		}

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader =
		Phieu.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
		Phieu.class, ModelWrapper.class
	};

	private long _phieuId;
	private long _companyId;
	private long _groupId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private String _maCTV;
	private String _hoTenCTV;
	private String _soHopDong;
	private Date _ngayChungTu;
	private String _diaChi;
	private String _soPhieu;
	private Date _ngayGhiSo;
	private String _maMSThuChi;
	private Double _soTien;
	private String _chungTuKemTheo;
	private int _loai;
	private Boolean _hoatDong;
	private Phieu _escapedModel;

}